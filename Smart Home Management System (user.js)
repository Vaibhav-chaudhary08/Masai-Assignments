function User(username, password, smartHome = null) {
  this.username = username;
  this.password = password;
  this.smartHome = smartHome;
}

User.prototype.authenticate = async function() {
  console.log(`Authenticating user ${this.username}...`);
  try {
    const response = await fetch("https://mock-auth-api.com/login", {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ username: this.username, password: this.password }),
    });
    if (response.ok) {
      console.log(`User ${this.username} authenticated.`);
      return true;
    } else {
      console.error(`Authentication failed for ${this.username}.`);
      return false;
    }
  } catch (error) {
    console.error(`Error authenticating user ${this.username}:`, error);
    return false;
  }
};

User.prototype.addDeviceToHome = function(device) {
  if (this.smartHome) {
    this.smartHome.addDevice(device);
  } else {
    console.log("User does not have a smart home.");
  }
};

User.prototype.removeDeviceFromHome = function(deviceName) {
  if (this.smartHome) {
    this.smartHome.removeDevice(deviceName);
  } else {
    console.log("User does not have a smart home.");
  }
};

User.prototype.controlDevice = function(deviceName, action) {
  if (this.smartHome) {
    const device = this.smartHome.devices.find(d => d.name === deviceName);
    if (device) {
      if (action === "on") device.on();
      else if (action === "off") device.off();
      else console.log("Invalid action.");
    } else {
      console.log(`Device ${deviceName} not found in smart home.`);
    }
  } else {
    console.log("User does not have a smart home.");
  }
};
